{"version":3,"sources":["logo.svg","utils/MinefieldUtils.js","compoments/Controls.js","compoments/Square.js","compoments/Minefield.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getRandomPosition","rows","columns","Math","floor","random","generateField","bombs","Field","zeros","dimensions","array","i","push","length","slice","map","row","r","col","c","revealed","availableBombs","x","y","isBomb","cell","nearBombs","f","counter","findNearBombs","revealDirection","hor","vert","revealNear","Controls","resetClick","setGame","useState","Rows","setRows","Cols","setCols","Bombs","setBombs","handleChange","event","field","target","value","className","type","onChange","ev","onClick","Square","lost","classnames","Minefield","setField","won","setWon","setLost","secondChance","setSecondChance","squareClick","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","warn","newField","console","log","unRevealead","forEach","checkIfGameWon","success","Number","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9e23f83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","\nfunction zeros(dimensions) {\n  var array = [];\n\n  for (var i = 0; i < dimensions[0]; ++i) {\n      array.push(dimensions.length === 1 ? 0 : zeros(dimensions.slice(1)));\n  }\n\n  return array;\n}\n\nfunction getRandomPosition(rows, columns) {\n  const x = Math.floor(Math.random() * rows);\n  const y = Math.floor(Math.random() * columns);\n  return [x, y]\n}\n\nfunction findNearBombs(f, x, y) {\n  let counter = 0\n  if (f[x-1]){\n    if (f[x-1][y] && f[x-1][y].isBomb) counter++\n    if (f[x-1][y-1] && f[x-1][y-1].isBomb) counter++\n    if (f[x-1][y+1] && f[x-1][y+1].isBomb) counter++\n  }\n\n  if (f[x+1]) {\n    if (f[x+1][y] && f[x+1][y].isBomb) counter++\n    if (f[x+1][y-1] && f[x+1][y-1].isBomb) counter++\n    if (f[x+1][y+1] && f[x+1][y+1].isBomb) counter++\n  }\n\n  // if (f[x][y] && f[x+1][y].isBomb) counter++\n  if (f[x][y-1] && f[x][y-1].isBomb) counter++\n  if (f[x][y+1] && f[x][y+1].isBomb) counter++\n\n\n  return counter\n}\nexport function generateField({ rows, columns, bombs }) {\n\n  const Field = zeros([rows, columns]).map((row, r) => {\n    return row.map((col, c) => {\n      return { revealed: false }\n    })\n  })\n\n  let availableBombs = bombs\n  while (availableBombs > 0) {\n    const [x,y] = getRandomPosition(rows,columns)\n    if (!Field[x][y].isBomb) {\n      Field[x][y].isBomb = true\n      availableBombs--\n    }\n  }\n\n  const Numbered = Field.map((row, x) => {\n    return row.map((cell, y) => {\n      if (cell.isBomb) return cell;\n      const nearBombs = findNearBombs(Field,x,y)\n      return { ...cell, nearBombs }\n    })\n  })\n\n  return Numbered\n}\n\n\n\nfunction revealDirection (f,x,y, hor, vert) {\n  // console.log(x,y,hor,vert)\n  if (f[x+hor]) {\n    if (f[x+hor][y+vert]){\n      if (f[x+hor][y+vert].nearBombs === 0 && f[x+hor][y+vert].revealed === false) {\n        f[x+hor][y+vert].revealed = true\n        return revealNear(f, x+hor, y+vert)\n      } else if (!f[x+hor][y+vert].isBomb) {\n        f[x+hor][y+vert].revealed = true\n      }\n    }\n  }\n  return f\n}\nexport function revealNear(f, x, y) {\n  // * reveal right\n  f = revealDirection(f,x,y, 0, 1)\n  // * reveal left\n  f = revealDirection(f,x,y, 0, -1)\n  // * reveal top\n  f = revealDirection(f,x,y, -1, 0)\n  // * reveal bottom\n  f = revealDirection(f,x,y, 1, 0)\n  // * reveal diagonial top-right\n  f = revealDirection(f,x,y, -1, 1)\n  // * reveal diagonial bottom-right\n  f = revealDirection(f,x,y, 1, 1)\n  // * reveal diagonial top-left\n  f = revealDirection(f,x,y, -1, -1)\n  // * reveal diagonial bottom-left\n  f = revealDirection(f,x,y, 1, -1)\n  return f\n}\n\nexport function checkIfGameWon(f, bombs) {\n  let unRevealead = 0;\n  f.forEach((row) => {\n    row.forEach(cell => {\n      if (!cell.revealed) unRevealead++\n    })\n  })\n\n  return unRevealead === bombs\n}","import React, { useState } from 'react'\n\n\nexport default function Controls ({ rows, columns, bombs, resetClick, setGame }) {\n\n  const [Rows, setRows] = useState(rows)\n  const [Cols, setCols] = useState(columns)\n  const [Bombs, setBombs] = useState(bombs)\n  const handleChange = (event, field) => {\n    if (field === 'rows') {\n      setRows(event.target.value)\n    } else if (field === 'cols') {\n      setCols(event.target.value)\n    } else if (field === 'bombs') {\n      setBombs(event.target.value)\n    }\n  };\n  return <div className='controls'>\n    <div className='inputs'> \n      <div>\n        <div> Rows </div>\n        <input type=\"number\" value={Rows} onChange={(ev) => handleChange(ev, 'rows')}></input> \n      </div>\n      <div>\n        <div> Columns </div>\n        <input type=\"number\" value={Cols} onChange={(ev) => handleChange(ev, 'cols')}></input> \n      </div>\n      <div>\n        <div> Bombs </div>\n        <input type=\"number\" value={Bombs} onChange={(ev) => handleChange(ev, 'bombs')}></input> \n      </div>\n    </div>\n    <div className=\"btns\">\n      <button onClick={() => setGame(Rows,Cols,Bombs)}>\n        Set Game\n      </button>\n      <button onClick={() => resetClick()}>\n        Reset Board\n      </button>\n    </div>\n  </div>\n}","import React from 'react'\nimport classnames from 'classnames'\n\nexport default function Square ({ onClick, x,y, cell, lost }) {\n\n  const { revealed, nearBombs, isBomb } = cell\n  const className = classnames('square', {\n    'revealed': revealed,\n    'bomb': isBomb & lost\n  })\n  return <div className={className} onClick={() => onClick(x,y)}>\n    {revealed && nearBombs !== 0 && <span>{nearBombs}</span>}\n  </div>\n}","import React, { useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { generateField, revealNear, checkIfGameWon } from '../utils/MinefieldUtils'\n\nimport Controls from './Controls'\nimport Square from './Square'\n\nexport default function Minefield() {\n\n  // TODO check field can have that many bombs\n  const [rows, setRows] = useState(10)\n  const [columns, setCols] = useState(25)\n  const [bombs, setBombs] = useState(50)\n  // const Field = \n  const [Field, setField] = useState(generateField({ rows, columns, bombs }))\n\n  const [won, setWon] = useState(false)\n  const [lost, setLost] = useState(false)\n  const [secondChance, setSecondChance] = useState(false)\n\n  const squareClick = (x,y) => {\n    if (won || lost) return\n    const cell = Field[x][y]\n    if (cell.isBomb) {\n      if (secondChance) {\n        toast.error('BOOOM! You lost', {\n          position: \"top-center\",\n          autoClose: true,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setLost(true)\n      } else {\n        toast.warn(\"Careful! That's a bomb! You have one more chance\", {\n          position: \"top-center\",\n          autoClose: true,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true\n        });\n        setSecondChance(true)\n      }\n\n      return;\n    }\n    Field[x][y].revealed = true\n    let newField = Field\n    newField = revealNear(Field, x, y)\n\n    setField([...newField])\n    console.log('bombs', bombs)\n    if (checkIfGameWon(newField, bombs)) {\n      setWon(true)\n      // toast('Congrats, you WON! Kudos')\n      toast.success('Congrats, you WON! Kudos', {\n        position: \"top-center\",\n        autoClose: true,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n    // if (Field)\n\n  }\n  \n  function resetClick() {\n    setWon(false)\n    setLost(false)\n    setSecondChance(false)\n    setField(generateField({ rows, columns, bombs }))\n  }\n\n  function setGame(rows, columns, bombs) {\n    setWon(false)\n    setLost(false)\n    setSecondChance(false)\n    setRows(rows)\n    setCols(columns)\n    setBombs(Number(bombs))\n    setField(generateField({ rows, columns, bombs }))\n  }\n\n  return <div className=\"minefield\">\n    <Controls rows={rows} bombs={bombs} columns={columns} resetClick={resetClick} setGame={setGame}/>\n    {Field.map((row, x) => {\n\n      return <div className=\"row\" key={x}>\n        {row.map((cell, y) => <Square key={`${x}${y}`} x={x} y={y} cell={cell} lost={lost} onClick={squareClick}/>)}\n        </div>\n    })}\n    {/* <ToastContainer position={toast.POSITION.TOP_RIGHT}/> */}\n    <ToastContainer/>\n  </div>\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Minefield from './compoments/Minefield'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      </header>\n      <Minefield/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}